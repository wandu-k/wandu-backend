buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
// https://mvnrepository.com/artifact/commons-io/commons-io
implementation 'commons-io:commons-io:2.5'


	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
	implementation 'org.springframework.boot:spring-boot-configuration-processor:3.2.5'
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor(
		"jakarta.persistence:jakarta.persistence-api",
		"jakarta.annotation:jakarta.annotation-api",
		"com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	)

}

tasks.named('test') {
	useJUnitPlatform()
}

// gradle에서 compile.java를 실행할 때 다 지우고 새로 만드는 부분
compileJava.dependsOn('clean')